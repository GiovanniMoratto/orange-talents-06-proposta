spring.application.name=PropostaApplication
### Datasource H2 ###
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:db_proposta
spring.datasource.username=zup
spring.datasource.password=
spring.datasource.initialization-mode=never
### H2 ###
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
### JPA ###
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
### Encoding ###
spring.messages.encoding=UTF-8
### Console Colors ###
spring.output.ansi.enabled=ALWAYS
### Server ###
server.port=8081
### Feign clients URL ###
solicitacao-analise-resource=http://${ANALISE_HOST:localhost}:9999/api/solicitacao
cartao-resource=http://${CONTAS_HOST:localhost}:8888
### Actuator Health Check ###
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
### Scheduled ###
scheduled-cartao.time=10000
### spring security resource server configuration ###
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}
#### Jaeger ###
opentracing.spring.cloud.feign.enabled=false
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name:api-desafio-proposta}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
### Timeout ###
# Health status when down #
management.endpoint.health.status.http-mapping.down=500
management.endpoint.health.status.http-mapping.fatal=500
management.endpoint.health.status.http-mapping.out-of-service=500
# Feign #
feign.client.config.analises.connect-timeout=100
feign.client.config.analises.read-timeout=1000
feign.client.config.cartoes.connect-timeout=100
feign.client.config.cartoes.read-timeout=1000
# JPA #
spring.jpa.properties.javax.persistence.query.timeout=50
### Criptografia ###
criptografia.secret=${CRIPTOGRAFIA_SECRET:!VoCY~MX[QNuCy|DQ0QKY<%yz_z@K1 ##skMGECv=g9v.Tx~0}